name: build and deploy docker image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRANCH_NAME: ${{ github.ref_name }}
  TAG_NAME: ${{ github.ref_name }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Set version
        id: version
        run: echo "version_tag=${{ env.BRANCH_NAME }}-${{ steps.vars.outputs.sha_short }}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ steps.vars.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Add SSH Key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/deploy_key.pem
        shell: bash

      - name: Set key permissions
        run: chmod 600 /tmp/deploy_key.pem
        shell: bash

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key_path: /tmp/deploy_key.pem
          script: |
            echo "Pulling the latest Docker image"
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version_tag }}

            echo "Updating docker-compose.yml"
            sed -i 's|image:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version_tag }}|' /home/ubuntu/clab/docker-compose.yml

            echo "Restarting Docker Compose"
            docker-compose -f /home/ubuntu/clab/docker-compose.yml down
            docker-compose -f /home/ubuntu/clab/docker-compose.yml up -d
